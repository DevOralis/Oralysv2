# Generated by Django 5.2.3 on 2025-08-20 21:59

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("hr", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Acte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("libelle", models.CharField(max_length=255, verbose_name="Libellé")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Prix"
                    ),
                ),
            ],
            options={
                "verbose_name": "Acte",
                "verbose_name_plural": "Actes",
            },
        ),
        
        migrations.CreateModel(
            name="EmergencyContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        region=None,
                        verbose_name="Téléphone",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=50, verbose_name="Lien"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "patient_identifier",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="Identifiant patient",
                    ),
                ),
                (
                    "cin",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Le N° CIN doit contenir 8 à 20 caractères alphanumériques.",
                                regex="^[A-Z0-9]{8,20}$",
                            )
                        ],
                        verbose_name="N° CIN",
                    ),
                ),
                (
                    "passport_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="N° de passeport",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Nom"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Prénom"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculin"), ("F", "Féminin"), ("O", "Autre")],
                        max_length=1,
                        null=True,
                        verbose_name="Sexe",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "nationality",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, verbose_name="Nationalité"
                    ),
                ),
                (
                    "profession",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Profession"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        region=None,
                        verbose_name="Téléphone fixe",
                    ),
                ),
                (
                    "mobile_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None, verbose_name="GSM"
                    ),
                ),
                (
                    "spouse_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Conjoint(e)"
                    ),
                ),
                (
                    "treating_physician",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Médecin traitant",
                    ),
                ),
                (
                    "referring_physician",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Médecin correspondant",
                    ),
                ),
                (
                    "disease_speciality",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Type maladie",
                    ),
                ),
                (
                    "has_insurance",
                    models.BooleanField(
                        default=False, verbose_name="A une mutuelle/assurance"
                    ),
                ),
                (
                    "insurance_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="N° immatriculation",
                    ),
                ),
                (
                    "affiliation_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="N° affiliation",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Lien de parenté",
                    ),
                ),
                (
                    "insured_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nom de l'adhérent",
                    ),
                ),
                (
                    "emergency_contacts",
                    models.ManyToManyField(
                        blank=True,
                        to="patient.emergencycontact",
                        verbose_name="Contacts d'urgence",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient",
                "verbose_name_plural": "Patients",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="Consultation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de la consultation"
                    ),
                ),
                (
                    "commentaires",
                    models.TextField(blank=True, verbose_name="Commentaires"),
                ),
                (
                    "traitement",
                    models.TextField(blank=True, verbose_name="Traitement/médicaments"),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Température (°C)",
                    ),
                ),
                (
                    "pression",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Pression artérielle"
                    ),
                ),
                (
                    "rythme_cardiaque",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Rythme cardiaque (bpm)"
                    ),
                ),
                (
                    "hospitalisation",
                    models.BooleanField(default=False, verbose_name="Hospitalisation"),
                ),
                (
                    "actes",
                    models.ManyToManyField(
                        blank=True, to="patient.Acte", verbose_name="Actes réalisés"
                    ),
                ),
                (
                    "medecin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="consultations",
                        to="hr.employee",
                    ),
                ),
                (
                    "speciality",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hr.speciality",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultations",
                        to="patient.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(blank=True, max_length=100, verbose_name="Nom"),
                ),
                (
                    "prenom",
                    models.CharField(blank=True, max_length=100, verbose_name="Prénom"),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="Téléphone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "date_heure",
                    models.DateTimeField(verbose_name="Date et heure du rendez-vous"),
                ),
                (
                    "motif",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Motif du rendez-vous"
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("à venir", "À venir"),
                            ("effectué", "Effectué"),
                            ("annulé", "Annulé"),
                        ],
                        default="à venir",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "mode",
                    models.CharField(
                        choices=[
                            ("telephone", "Téléphone"),
                            ("mail", "Mail"),
                            ("direct", "Direct"),
                        ],
                        default="direct",
                        max_length=20,
                        verbose_name="Mode de prise de rendez-vous",
                    ),
                ),
                (
                    "medecin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointments",
                        to="hr.employee",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointments",
                        to="patient.patient",
                    ),
                ),
            ],
        ),
    ]
