# Generated by Django 5.2.3 on 2025-08-20 21:59

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("hr", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContractType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom du type")),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Code"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Type de contrat",
                "verbose_name_plural": "Types de contrat",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Marque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100, unique=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="parcauto/logo/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Nom du fournisseur"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone"
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="Adresse")),
            ],
            options={
                "verbose_name": "Fournisseur",
                "verbose_name_plural": "Fournisseurs",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TypeEntretien",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Nom du type d'entretien",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Type d'entretien",
                "verbose_name_plural": "Types d'entretien",
                "ordering": ["nom"],
            },
        ),
        migrations.CreateModel(
            name="Modele",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100)),
                (
                    "marque",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modeles",
                        to="parcauto.marque",
                    ),
                ),
            ],
            options={
                "unique_together": {("nom", "marque")},
            },
        ),
        migrations.CreateModel(
            name="Vehicule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("immatriculation", models.CharField(max_length=20, unique=True)),
                ("annee", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("utilitaire", "Utilitaire"),
                            ("tourisme", "Tourisme"),
                            ("camion", "Camion"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("disponible", "Disponible"),
                            ("en_service", "En service"),
                            ("maintenance", "En maintenance"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="parcauto/image/"
                    ),
                ),
                ("kilometrage_actuel", models.PositiveIntegerField()),
                ("date_achat", models.DateField(default=django.utils.timezone.now)),
                (
                    "date_mise_service",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "marque",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parcauto.marque",
                    ),
                ),
                (
                    "modele",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parcauto.modele",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Entretien",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_planifiee", models.DateField(verbose_name="Date planifiée")),
                (
                    "StatutEntretien",
                    models.CharField(
                        choices=[
                            ("planifié", "Planifié"),
                            ("effectué", "Effectué"),
                            ("en_retard", "En retard"),
                        ],
                        default="planifié",
                        max_length=20,
                    ),
                ),
                (
                    "remarque",
                    models.TextField(blank=True, null=True, verbose_name="Remarques"),
                ),
                (
                    "piece_jointe",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="parcauto/pieces_jointes/",
                        verbose_name="Pièce jointe",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type_entretien",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parcauto.typeentretien",
                        verbose_name="Type d'entretien",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entretiens",
                        to="parcauto.vehicule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entretien",
                "verbose_name_plural": "Entretiens",
                "ordering": ["-date_planifiee"],
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                ("start_date", models.DateField()),
                ("expiration_date", models.DateField()),
                ("contract_file", models.FileField(upload_to="parcauto/contracts/")),
                ("notes", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contract_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="contracts",
                        to="parcauto.contracttype",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parcauto.provider",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="parcauto.vehicule",
                    ),
                ),
            ],
            options={
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Affectation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_debut", models.DateField()),
                ("date_fin", models.DateField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[("A", "Active"), ("T", "Terminée")],
                        default="A",
                        max_length=1,
                    ),
                ),
                (
                    "kilometrage_debut",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "kilometrage_fin",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "distance_parcourue",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("duree_jours", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_assignments",
                        to="hr.employee",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="parcauto.vehicule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assignment",
                "verbose_name_plural": "Assignments",
                "ordering": ["-date_debut"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("statut", "A")),
                        fields=("vehicle", "driver"),
                        name="unique_active_assignment",
                    )
                ],
            },
        ),
    ]
