# Generated by Django 5.2.3 on 2025-08-20 21:59

import apps.pharmacy.models.supplier
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("hr", "0001_initial"),
        ("purchases", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Dci",
            fields=[
                ("dci_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "label",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom DCI"
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "pharmacy_dci",
            },
        ),
        migrations.CreateModel(
            name="PharmaceuticalForm",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "pharmacy_pharmaceutical_form",
            },
        ),
        migrations.CreateModel(
            name="Pharmacy",
            fields=[
                ("pharmacy_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "label",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom de la pharmacie"
                    ),
                ),
                ("adress", models.TextField(blank=True)),
            ],
            options={
                "db_table": "pharmacy_pharmacy",
            },
        ),
        migrations.CreateModel(
            name="PharmacyLocationType",
            fields=[
                (
                    "location_type_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "pharmacy_locationType",
            },
        ),
        migrations.CreateModel(
            name="PharmacyOperationType",
            fields=[
                (
                    "operation_type_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("label", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "pharmacy_operation_type",
            },
        ),
        migrations.CreateModel(
            name="PharmacyProductCategory",
            fields=[
                ("categ_id", models.AutoField(primary_key=True, serialize=False)),
                ("label", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "pharmacy_product_category",
            },
        ),
        migrations.CreateModel(
            name="PharmacyUnitOfMesure",
            fields=[
                ("uom_id", models.AutoField(primary_key=True, serialize=False)),
                ("label", models.CharField(max_length=50, unique=True)),
                ("symbole", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "pharmacy_unitofmesure",
            },
        ),
        migrations.CreateModel(
            name="PharmacyOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("date_order", models.DateField(default=django.utils.timezone.now)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("waiting", "En attente"),
                            ("confirmed", "Confirmée"),
                            ("partial", "Réception partielle"),
                            ("done", "Fermé"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "amount_untaxed",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "amount_tax",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "amount_total",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "invoice_status",
                    models.CharField(
                        choices=[
                            ("to_invoice", "À facturer"),
                            ("partial", "Partiellement facturé"),
                            ("invoiced", "Totalement facturé"),
                        ],
                        default="to_invoice",
                        max_length=20,
                    ),
                ),
                ("date_planned", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "supplier_ref",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="purchases.currency",
                    ),
                ),
                (
                    "payment_mode",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pharmacy_orders",
                        to="purchases.paymentmode",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_order",
            },
        ),
        migrations.CreateModel(
            name="PharmacyProduct",
            fields=[
                ("product_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "code",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "short_label",
                    models.CharField(max_length=100, verbose_name="Libellé court"),
                ),
                ("brand", models.CharField(blank=True, max_length=100, null=True)),
                ("full_label", models.CharField(blank=True, max_length=255, null=True)),
                ("dosage", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "barcode",
                    models.CharField(blank=True, max_length=30, null=True, unique=True),
                ),
                (
                    "ppm_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "unit_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "supplier_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "internal_purchase_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "refund_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "refund_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "total_quantity_cached",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "nombrepiece",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Nombre de pièces par boîte"
                    ),
                ),
                (
                    "dci",
                    models.ForeignKey(
                        blank=True,
                        db_column="dci_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.dci",
                    ),
                ),
                (
                    "pharmaceutical_form",
                    models.ForeignKey(
                        blank=True,
                        db_column="pharmaceutical_form_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.pharmaceuticalform",
                    ),
                ),
                (
                    "categ",
                    models.ForeignKey(
                        blank=True,
                        db_column="categ_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.pharmacyproductcategory",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_product",
            },
        ),
        migrations.CreateModel(
            name="PharmacyOrderLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_qty", models.FloatField(blank=True, null=True)),
                (
                    "price_unit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "price_subtotal",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_lines",
                        to="pharmacy.pharmacyorder",
                    ),
                ),
                (
                    "tax",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="purchases.tax",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pharmacy.pharmacyproduct",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_order_line",
            },
        ),
        migrations.CreateModel(
            name="PharmacyLineStockMove",
            fields=[
                ("line_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "quantity_demanded",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "quantity_arrived",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_move_lines",
                        to="pharmacy.pharmacyproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ligne de mouvement pharmacie",
                "verbose_name_plural": "Lignes de mouvement pharmacie",
                "db_table": "pharmacy_line_stock_move",
            },
        ),
        migrations.CreateModel(
            name="PharmacyProductDepartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_stored",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pharmacy_department_products",
                        to="hr.department",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pharmacy_product_departments",
                        to="pharmacy.pharmacyproduct",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_product_department",
                "unique_together": {("product", "department")},
            },
        ),
        migrations.AddField(
            model_name="pharmacyproduct",
            name="departments",
            field=models.ManyToManyField(
                blank=True,
                related_name="pharmacy_products",
                through="pharmacy.PharmacyProductDepartment",
                to="hr.department",
            ),
        ),
        migrations.CreateModel(
            name="PharmacyStockLocation",
            fields=[
                ("location_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                (
                    "location_type",
                    models.ForeignKey(
                        db_column="location_type_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.pharmacylocationtype",
                    ),
                ),
                (
                    "parent_location",
                    models.ForeignKey(
                        blank=True,
                        db_column="parent_location_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="pharmacy.pharmacystocklocation",
                    ),
                ),
                (
                    "pharmacy",
                    models.ForeignKey(
                        blank=True,
                        db_column="pharmacy_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pharmacy.pharmacy",
                        verbose_name="Pharmacie associée",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_stockLocation",
            },
        ),
        migrations.CreateModel(
            name="PharmacyProductLocation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "quantity_stored",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "quantity_counted",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("last_count_date", models.DateField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        db_column="product_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pharmacy_product_locations",
                        to="pharmacy.pharmacyproduct",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        db_column="location_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pharmacy_product_locations",
                        to="pharmacy.pharmacystocklocation",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_product_location",
                "unique_together": {("product", "location")},
            },
        ),
        migrations.AddField(
            model_name="pharmacyproduct",
            name="locations",
            field=models.ManyToManyField(
                related_name="products",
                through="pharmacy.PharmacyProductLocation",
                to="pharmacy.pharmacystocklocation",
            ),
        ),
        migrations.CreateModel(
            name="PharmacyStockMove",
            fields=[
                ("move_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("confirmed", "Confirmé"),
                            ("done", "Terminé"),
                            ("canceled", "Annulé"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("reference", models.CharField(max_length=64, unique=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("scheduled_date", models.DateField(blank=True, null=True)),
                ("effective_date", models.DateField(blank=True, null=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pharmacy_stock_moves",
                        to="hr.department",
                    ),
                ),
                (
                    "dest_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_moves_to",
                        to="pharmacy.pharmacystocklocation",
                    ),
                ),
                (
                    "operation_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.pharmacyoperationtype",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        related_name="pharmacy_stock_moves",
                        through="pharmacy.PharmacyLineStockMove",
                        to="pharmacy.pharmacyproduct",
                    ),
                ),
                (
                    "source_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_moves_from",
                        to="pharmacy.pharmacystocklocation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mouvement de stock pharmacie",
                "verbose_name_plural": "Mouvements de stock pharmacie",
                "db_table": "pharmacy_stock_move",
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.AddField(
            model_name="pharmacylinestockmove",
            name="move",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lines",
                to="pharmacy.pharmacystockmove",
            ),
        ),
        migrations.CreateModel(
            name="PharmacySupplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("is_company", models.BooleanField(default=True)),
                ("street", models.CharField(blank=True, max_length=255)),
                ("street2", models.CharField(blank=True, max_length=255)),
                ("zip", models.CharField(blank=True, max_length=20)),
                ("email", models.CharField(blank=True, max_length=100)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("mobile", models.CharField(blank=True, max_length=20)),
                ("ICE", models.CharField(blank=True, max_length=50)),
                ("RC", models.IntegerField(blank=True, null=True)),
                ("IF", models.IntegerField(blank=True, null=True)),
                ("vat", models.CharField(blank=True, max_length=50)),
                ("RIB", models.CharField(blank=True, max_length=100)),
                ("comment", models.TextField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.pharmacy.models.supplier.supplier_logo_path,
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pharmacy_suppliers_by_city",
                        to="purchases.city",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pharmacy_suppliers_by_country",
                        to="purchases.country",
                    ),
                ),
                (
                    "lang",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pharmacy_suppliers_by_language",
                        to="purchases.language",
                    ),
                ),
            ],
            options={
                "db_table": "pharmacy_supplier",
            },
        ),
        migrations.AddField(
            model_name="pharmacystockmove",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="pharmacy_stock_moves",
                to="pharmacy.pharmacysupplier",
            ),
        ),
        migrations.AddField(
            model_name="pharmacyorder",
            name="supplier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="pharmacy_orders",
                to="pharmacy.pharmacysupplier",
            ),
        ),
        migrations.AddField(
            model_name="pharmacyproduct",
            name="uom",
            field=models.ForeignKey(
                blank=True,
                db_column="uom_id",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="pharmacy.pharmacyunitofmesure",
            ),
        ),
        migrations.AddField(
            model_name="pharmacylinestockmove",
            name="uom",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="pharmacy.pharmacyunitofmesure",
            ),
        ),
    ]
